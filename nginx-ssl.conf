server {
    listen 80;
    server_name DOMAIN_PLACEHOLDER;
    
    # Let's Encrypt challenge - allow HTTP for certificate verification
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name DOMAIN_PLACEHOLDER;
    
    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    
    # Document root
    root /opt/radiograb/frontend/public;
    index index.php index.html;
    
    # Max upload size for recordings
    client_max_body_size 200M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Security
        fastcgi_hide_header X-Powered-By;
        fastcgi_param HTTPS on;
        fastcgi_param SERVER_PORT 443;
        
        # Timeout settings
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
    }
    
    # Static assets with long cache
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    # Recordings directory access
    location ^~ /recordings/ {
        alias /var/radiograb/recordings/;
        add_header Content-Type audio/mpeg;
        add_header Cache-Control "public, max-age=3600";
        add_header Access-Control-Allow-Origin "*";
        add_header Accept-Ranges bytes;
    }

    # Test recordings directory access
    location ^~ /temp/ {
        alias /var/radiograb/temp/;
        add_header Content-Type audio/mpeg;
        add_header Cache-Control "public, max-age=300";
        add_header Access-Control-Allow-Origin "*";
        add_header Accept-Ranges bytes;
    }

    # Audio files with shorter cache (for other locations)
    location ~* \.(mp3|wav|ogg|m4a|aac|flac)$ {
        expires 7d;
        add_header Cache-Control "public";
        add_header Accept-Ranges bytes;
    }
    
    # RSS feeds
    location ~* \.(xml|rss)$ {
        expires 1h;
        add_header Content-Type application/rss+xml;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK - SSL Enabled\\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to sensitive files and directories
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }
    
    location ~ /(database|backend|includes|\.git)/ {
        deny all;
        return 404;
    }
    
    # API endpoints
    location /api/ {
        try_files $uri $uri/ =404;
    }
    
    # Default try_files
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}
